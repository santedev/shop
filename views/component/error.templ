package component

templ ErrorProductCombination(errMessage error) {
	<div>{ errMessage.Error() }</div>
}

templ ErrorImage(errMessage error) {
	<span>{ errMessage.Error() }</span>
}

templ ErrorButton(errMessage error, action action) {
	switch action {
		case Redirect:
			<a href="/">{ errMessage.Error() }</a>
		case Disabled:
			<a>{ errMessage.Error() }</a>
	}
}

templ ErrorModalCart(title string, err error) {
	<div
		x-data="{ modalOpen: false }"
		x-init="setTimeout(() => { modalOpen = true }, 0)"
		data-id="error-modal"
		@keydown.escape.window='modalOpen = false; setTimeout(() => { $("[data-id=\"error-modal\"]").remove(); }, 300)'
		class="text-slate-700 relative z-50 w-auto h-auto"
	>
		<div class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen" x-cloak>
			<div
				x-show="modalOpen"
				x-transition:enter="ease-out duration-300"
				x-transition:enter-start="opacity-0"
				x-transition:enter-end="opacity-100"
				x-transition:leave="ease-in duration-300"
				x-transition:leave-start="opacity-100"
				x-transition:leave-end="opacity-0"
				@click='modalOpen = false; setTimeout(() => { $("[data-id=\"error-modal\"]").remove(); }, 300)'
				class="absolute inset-0 w-full h-full bg-black bg-opacity-40"
			></div>
			<div
				x-show="modalOpen"
				x-trap.inert.noscroll="modalOpen"
				x-transition:enter="ease-out duration-300"
				x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
				x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
				x-transition:leave="ease-in duration-200"
				x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
				x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
				class="relative w-full py-6 bg-white px-7 sm:max-w-lg sm:rounded-lg"
			>
				<div class="flex items-center justify-between pb-2">
					<h3 class="text-lg font-semibold">{ title }</h3>
					<button
						@click='modalOpen = false; setTimeout(() => { $("[data-id=\"error-modal\"]").remove(); }, 300)'
						class="absolute top-0 right-0 flex items-center justify-center w-8 h-8 mt-5 mr-5 text-gray-600 rounded-full hover:text-gray-800 hover:bg-gray-50"
					>
						<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
				</div>
				<div class="relative w-auto">
					<p>{ err.Error() }</p>
				</div>
			</div>
		</div>
	</div>
}

templ ErrorCartNoProducts(noProducts, oob bool) {
	if noProducts {
		<div
			if oob {
				hx-swap-oob="innerHTML:#cart-container"
			}
		>
			<div
				id="error-no-products-in-cart"
				class="bg-neutral-200"
			>
				no products in cart
			</div>
		</div>
	} else {
		<div
			id="error-no-products-in-cart"
			class="hidden bg-neutral-200"
			if oob {
				hx-swap-oob="true"
			}
		>no products in cart</div>
	}
}
